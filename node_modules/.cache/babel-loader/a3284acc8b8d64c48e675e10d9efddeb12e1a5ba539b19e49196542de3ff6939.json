{"ast":null,"code":"var _jsxFileName = \"/Users/alli/tvshow-app-front-end/src/Components/ShowEditForm.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API_URL;\nfunction ShowEditForm() {\n  _s();\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  const [show, setShow] = useState({\n    title: \"\",\n    director: \"\",\n    genre: \"\",\n    release_date: \"\",\n    season_count: \"\",\n    episode_count: \"\",\n    cast: \"\",\n    is_favorite: false\n  });\n  const updateShow = async updatedShow => {\n    try {\n      await axios.put(`${API}/shows/${id}`, updatedShow);\n      navigate(`/shows/${id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleTextChange = event => {\n    setShow({\n      ...show,\n      [event.target.id]: event.target.value\n    });\n  };\n  const handleCheckboxChange = () => {\n    setShow({\n      ...show,\n      is_favorite: !show.is_favorite\n    });\n  };\n  useEffect(() => {\n    axios.get(`${API}/shows/${id}`).then(response => setShow(response.data), error => navigate(`/not-found`));\n  }, [id, navigate]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    updateShow(show, id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Edit\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        value: show.name,\n        type: \"text\",\n        onChange: handleTextChange,\n        placeholder: \"Ttile of Show\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"director\",\n        children: \"Director:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"director\",\n        type: \"text\",\n        value: show.director,\n        onChange: handleTextChange,\n        placeholder: \"Director name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre\",\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"genre\",\n        type: \"text\",\n        name: \"genre\",\n        value: show.genre,\n        placeholder: \"Genre name\",\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"release_date\",\n        children: \"Release Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"release_date\",\n        type: \"text\",\n        name: \"release_date\",\n        value: show.release_date,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"season_count\",\n        children: \"Season Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"season_count\",\n        type: \"text\",\n        name: \"season_count\",\n        value: show.season_count,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"episode_count\",\n        children: \"Episode Count:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"episode_count\",\n        type: \"text\",\n        name: \"episode_count\",\n        value: show.episode_count,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cast\",\n        children: \"Cast:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"cast\",\n        type: \"checkbox\",\n        name: \"cast\",\n        onChange: handleCheckboxChange,\n        checked: show.cast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"is_favorite\",\n        children: \"Favorite:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"is_favorite\",\n        type: \"checkbox\",\n        onChange: handleCheckboxChange,\n        checked: show.is_favorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/shows/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Nevermind!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ShowEditForm, \"ndDD9jqMt0ZBhjBFDlsIvunQrnw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ShowEditForm;\nexport default ShowEditForm;\nvar _c;\n$RefreshReg$(_c, \"ShowEditForm\");","map":{"version":3,"names":["axios","useState","useEffect","useParams","Link","useNavigate","jsxDEV","_jsxDEV","API","process","env","REACT_APP_API_URL","ShowEditForm","_s","id","navigate","show","setShow","title","director","genre","release_date","season_count","episode_count","cast","is_favorite","updateShow","updatedShow","put","error","console","handleTextChange","event","target","value","handleCheckboxChange","get","then","response","data","handleSubmit","preventDefault","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","type","onChange","placeholder","required","checked","to","_c","$RefreshReg$"],"sources":["/Users/alli/tvshow-app-front-end/src/Components/ShowEditForm.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\n\nconst API = process.env.REACT_APP_API_URL;\n\nfunction ShowEditForm() {\n  let { id } = useParams();\n  let navigate = useNavigate();\n\n  const [show, setShow] = useState({\n    title: \"\",\n    director: \"\",\n    genre: \"\",\n    release_date: \"\",\n    season_count: \"\",\n    episode_count: \"\",\n    cast: \"\",\n    is_favorite: false,\n  });\n\n  const updateShow = async (updatedShow) => {\n    try {\n      await axios.put(`${API}/shows/${id}`, updatedShow);\n      navigate(`/shows/${id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n\n  const handleTextChange = (event) => {\n    setShow({ ...show, [event.target.id]: event.target.value });\n  };\n\n  const handleCheckboxChange = () => {\n    setShow({ ...show, is_favorite: !show.is_favorite });\n  };\n\n  useEffect(() => {\n    axios.get(`${API}/shows/${id}`).then(\n      (response) => setShow(response.data),\n      (error) => navigate(`/not-found`)\n    );\n  }, [id, navigate]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n   updateShow(show, id);\n  };\n  return (\n    <div className=\"Edit\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Title:</label>\n        <input\n          id=\"name\"\n          value={show.name}\n          type=\"text\"\n          onChange={handleTextChange}\n          placeholder=\"Ttile of Show\"\n          required\n        />\n        <label htmlFor=\"director\">Director:</label>\n        <input\n          id=\"director\"\n          type=\"text\"\n          value={show.director}\n          onChange={handleTextChange}\n          placeholder=\"Director name\"\n          required\n        />\n        <label htmlFor=\"genre\">Genre:</label>\n        <input\n          id=\"genre\"\n          type=\"text\"\n          name=\"genre\"\n          value={show.genre}\n          placeholder=\"Genre name\"\n          onChange={handleTextChange}\n        />\n\n        <label htmlFor=\"release_date\">Release Date:</label>\n        <input\n          id=\"release_date\"\n          type=\"text\"\n          name=\"release_date\"\n          value={show.release_date}\n          onChange={handleTextChange}\n        />\n        <label htmlFor=\"season_count\">Season Date:</label>\n        <input\n          id=\"season_count\"\n          type=\"text\"\n          name=\"season_count\"\n          value={show.season_count}\n          onChange={handleTextChange}\n        />\n        <label htmlFor=\"episode_count\">Episode Count:</label>\n        <input\n          id=\"episode_count\"\n          type=\"text\"\n          name=\"episode_count\"\n          value={show.episode_count}\n          onChange={handleTextChange}\n        />\n        <label htmlFor=\"cast\">Cast:</label>\n        <input\n          id=\"cast\"\n          type=\"checkbox\"\n          name=\"cast\"\n          onChange={handleCheckboxChange}\n          checked={show.cast}\n        />\n        <label htmlFor=\"is_favorite\">Favorite:</label>\n        <input\n          id=\"is_favorite\"\n          type=\"checkbox\"\n          onChange={handleCheckboxChange}\n          checked={show.is_favorite}\n        />\n\n        <br />\n\n        <input type=\"submit\" />\n      </form>\n      <Link to={`/shows/${id}`}>\n        <button>Nevermind!</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default ShowEditForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}